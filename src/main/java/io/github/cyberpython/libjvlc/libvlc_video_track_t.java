package io.github.cyberpython.libjvlc;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class libvlc_video_track_t extends Structure {
	public int i_height;
	public int i_width;
	public int i_sar_num;
	public int i_sar_den;
	public int i_frame_rate_num;
	public int i_frame_rate_den;
	/** @see libvlc_video_orient_t */
	public int i_orientation;
	/** @see libvlc_video_projection_t */
	public int i_projection;
	/** < Initial view point */
	public libvlc_video_viewpoint_t pose;
	public libvlc_video_track_t() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("i_height", "i_width", "i_sar_num", "i_sar_den", "i_frame_rate_num", "i_frame_rate_den", "i_orientation", "i_projection", "pose");
	}
	public libvlc_video_track_t(int i_height, int i_width, int i_sar_num, int i_sar_den, int i_frame_rate_num, int i_frame_rate_den, int i_orientation, int i_projection, libvlc_video_viewpoint_t pose) {
		super();
		this.i_height = i_height;
		this.i_width = i_width;
		this.i_sar_num = i_sar_num;
		this.i_sar_den = i_sar_den;
		this.i_frame_rate_num = i_frame_rate_num;
		this.i_frame_rate_den = i_frame_rate_den;
		this.i_orientation = i_orientation;
		this.i_projection = i_projection;
		this.pose = pose;
	}
	public libvlc_video_track_t(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends libvlc_video_track_t implements Structure.ByReference {
		
	};
	public static class ByValue extends libvlc_video_track_t implements Structure.ByValue {
		
	};
}
