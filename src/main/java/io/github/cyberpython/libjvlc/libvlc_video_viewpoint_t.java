package io.github.cyberpython.libjvlc;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class libvlc_video_viewpoint_t extends Structure {
	/** < view point yaw in degrees  ]-180;180] */
	public float f_yaw;
	/** < view point pitch in degrees  ]-90;90] */
	public float f_pitch;
	/** < view point roll in degrees ]-180;180] */
	public float f_roll;
	/** < field of view in degrees ]0;180[ (default 80.) */
	public float f_field_of_view;
	public libvlc_video_viewpoint_t() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("f_yaw", "f_pitch", "f_roll", "f_field_of_view");
	}
	public libvlc_video_viewpoint_t(float f_yaw, float f_pitch, float f_roll, float f_field_of_view) {
		super();
		this.f_yaw = f_yaw;
		this.f_pitch = f_pitch;
		this.f_roll = f_roll;
		this.f_field_of_view = f_field_of_view;
	}
	public libvlc_video_viewpoint_t(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends libvlc_video_viewpoint_t implements Structure.ByReference {
		
	};
	public static class ByValue extends libvlc_video_viewpoint_t implements Structure.ByValue {
		
	};
}
