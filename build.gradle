buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        // https://mvnrepository.com/artifact/com.nativelibs4java/jnaerator
        classpath "com.nativelibs4java:jnaerator:0.12"
    }
}

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

}

def VLC_INCLUDES_DIR = '../third_party/vlc/include'

task generateBindings(type:JavaExec) {
    main = "com.ochafik.lang.jnaerator.JNAerator"
    classpath = buildscript.configurations.classpath
    args "-f", "-noComments", "-arch", "linux_x64", "-arch", "win64", "-rootPackage", "io.github.cyberpython.libjvlc", "-package", "io.github.cyberpython.libjvlc", "-library", "vlc", "-runtime", "JNA", "-mode", "Directory", "${VLC_INCLUDES_DIR}/vlc/libvlc.h", "${VLC_INCLUDES_DIR}/vlc/libvlc_media.h", "${VLC_INCLUDES_DIR}/vlc/libvlc_media_player.h", "${VLC_INCLUDES_DIR}/vlc/libvlc_vlm.h", "-o", "${project.sourceSets.main.java.srcDirs[0]}"
}

task fixBindings{
    dependsOn generateBindings
    doFirst{
        // Fix the return type of getFieldOrder to work with JNA 5.x:
        ant.replaceregexp(match:'List\\<\\? \\>', replace:'List<String>', flags:'g', byline:true) {
            fileset(dir: "${project.sourceSets.main.java.srcDirs[0]}/io/github/cyberpython/libjvlc", includes: '*.java')
        }
        // Fix type of int expression assigned to char by adding cast:
        ant.replaceregexp(match:"\\= '([a-z])' \\<\\< ([0-9]+);", replace:"\\= \\(char\\) \\('\\1' \\<\\< \\2\\);", flags:'g', byline:true) {
            fileset(dir: "${project.sourceSets.main.java.srcDirs[0]}/io/github/cyberpython/libjvlc", includes: 'VlcLibrary.java')
        }
        // Replace unused deprecated version of libvlc_media_parse_with_options() with libvlc_media_parse (WARNING: may not be present in VLC 3.x+ API)
        ant.replaceregexp(match:"int libvlc_media_parse_with_options\\(Pointer p_md, int parse_flag, int timeout\\);", replace:"int libvlc_media_parse\\(PointerByReference p_md\\);", flags:'g', byline:true) {
            fileset(dir: "${project.sourceSets.main.java.srcDirs[0]}/io/github/cyberpython/libjvlc", includes: 'VlcLibrary.java')
        }
        // Replace NativeSize from JNAerator's runtime with custom one:
        ant.replaceregexp(match:"import com\\.ochafik\\.lang\\.jnaerator\\.runtime\\.NativeSize;", replace:"import io\\.github\\.cyberpython\\.jna\\.NativeSize;", flags:'g', byline:true) {
            fileset(dir: "${project.sourceSets.main.java.srcDirs[0]}/io/github/cyberpython/libjvlc", includes: '*.java')
        }
    }
}

compileJava.dependsOn fixBindings

repositories {
    jcenter()
}

dependencies {
    
    implementation group: 'net.java.dev.jna', name: 'jna', version: '5.8.0'

    // To get the OS name
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}
